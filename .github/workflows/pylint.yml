name: Pylint

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Pylint
      id: pylint
      run: |
        # Run pylint and save output to a file
        pylint pipeline notebooks tests > pylint_output.txt || true
        
        # Extract score using grep and sed
        SCORE=$(grep -o "Your code has been rated at [0-9]\+\.[0-9]\+/10" pylint_output.txt | sed 's/Your code has been rated at \([0-9.]*\)\/10/\1/')
        
        # Set score as output variable
        echo "score=$SCORE" >> $GITHUB_OUTPUT
        
    - name: Upload Pylint Output
      uses: actions/upload-artifact@v3
      with:
        name: pylint-results
        path: pylint_output.txt

    - name: Update README with Pylint Score
      run: |
        # Get score from previous step
        SCORE="${{ steps.pylint.outputs.score }}"
        
        # Determine badge color based on score
        if (( $(echo "$SCORE >= 9.0" | bc -l) )); then
          COLOR="brightgreen"
        elif (( $(echo "$SCORE >= 8.0" | bc -l) )); then
          COLOR="green"
        elif (( $(echo "$SCORE >= 7.0" | bc -l) )); then
          COLOR="yellowgreen"
        elif (( $(echo "$SCORE >= 6.0" | bc -l) )); then
          COLOR="yellow"
        else
          COLOR="red"
        fi
        
        # Create badge markdown
        BADGE="![Pylint Score](https://img.shields.io/badge/pylint-${SCORE}%2F10-${COLOR})"
        
        # Update README.md
        if grep -q "!\[Pylint Score\]" README.md; then
          # Create a new file with the badge replaced
          perl -pe 's|!\[Pylint Score\]\(https://img\.shields\.io/badge/pylint-[\d.]+%2F10-[a-z]+\)|'"$BADGE"'|g' README.md > README.new
          mv README.new README.md
        else
          # Find the first heading line number
          FIRST_HEADING=$(grep -n "^# " README.md | head -1 | cut -d: -f1)
          
          # Create a new file with the badge inserted after the first heading
          {
            head -n "$FIRST_HEADING" README.md
            echo ""
            echo "$BADGE"
            tail -n +"$((FIRST_HEADING+1))" README.md
          } > README.new
          mv README.new README.md
        fi
    
    - name: Commit and push README changes
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git diff --quiet README.md || (git add README.md && git commit -m "Update Pylint score badge [skip ci]" && git push)